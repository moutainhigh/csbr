<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.csbr.cloud</groupId>
	<artifactId>camunda-server</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<name>camunda-server</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
<!--		<spring-cloud.version>Greenwich.SR2</spring-cloud.version>-->
		<spring-cloud.version>Hoxton.SR6</spring-cloud.version>
		<!--docker镜像前缀-->
		<docker.image.prefix>springio</docker.image.prefix>
		<camunda.version>7.12.0</camunda.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>com.csbr.qingcloud</groupId>
			<artifactId>csbr-cloud-common</artifactId>
			<version>1.0.1-SNAPSHOT</version>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-config</artifactId>
				</exclusion>
					<!--				<exclusion>-->
					<!--					<groupId>org.springframework.cloud</groupId>-->
					<!--					<artifactId>spring-cloud-starter-openfeign</artifactId>-->
					<!--				</exclusion>-->
					<!--				<exclusion>-->
					<!--					<groupId>org.springframework.cloud</groupId>-->
					<!--					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>-->
					<!--				</exclusion>-->
				<exclusion>
					<groupId>com.alibaba.cloud</groupId>
					<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
				</exclusion>
<!--				<exclusion>-->
<!--					<groupId>com.alibaba.cloud</groupId>-->
<!--					<artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>-->
<!--				</exclusion>-->
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-zipkin</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.csbr.qingcloud</groupId>
			<artifactId>csbr-cloud-swagger</artifactId>
			<version>1.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
			<version>3.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter-webapp</artifactId>
			<version>3.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.camunda.bpm.springboot</groupId>
			<artifactId>camunda-bpm-spring-boot-starter</artifactId>
			<version>3.4.2</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.h2database</groupId>-->
<!--			<artifactId>h2</artifactId>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.camunda.spin</groupId>-->
<!--			<artifactId>camunda-spin-dataformat-all</artifactId>-->
<!--			<version>1.6.6</version>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-test</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
		<dependency>
			<groupId>io.seata</groupId>
			<artifactId>seata-spring-boot-starter</artifactId>
			<version>1.2.0</version>
			<exclusions>
				<exclusion>
					<artifactId>seata-all</artifactId>
					<groupId>io.seata</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.seata</groupId>
			<artifactId>seata-all</artifactId>
			<version>1.2.0</version>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from camunda -->
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<version>${camunda.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>
<!--	<repositories>-->
<!--		&lt;!&ndash;私服仓库&ndash;&gt;-->
<!--		<repository>-->
<!--			<id>nexus3</id>-->
<!--			<name>Public Repository</name>-->
<!--			<url>http://192.168.5.4:18081/repository/csbr-group</url>-->
<!--			<releases>-->
<!--				<enabled>true</enabled>-->
<!--			</releases>-->
<!--			<snapshots>-->
<!--				<enabled>true</enabled>-->
<!--			</snapshots>-->
<!--		</repository>-->
<!--		&lt;!&ndash;阿里仓库&ndash;&gt;-->
<!--		<repository>-->
<!--			<id>alimaven</id>-->
<!--			<name>aliyun maven</name>-->
<!--			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--		</repository>-->
<!--	</repositories>-->


	<build>
		<finalName>camunda-server</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--使用jib快速构建摆脱dockerfile文件-->
			<!--			<plugin>-->
			<!--				<groupId>com.google.cloud.tools</groupId>-->
			<!--				<artifactId>jib-maven-plugin</artifactId>-->
			<!--				<version>0.9.0</version>-->
			<!--				<configuration>-->
			<!--					<to>-->
			<!--						<image>gcr.io/my-project/image-built-with-jib</image>-->
			<!--					</to>-->
			<!--				</configuration>-->
			<!--			</plugin>-->
		</plugins>
	</build>

</project>
