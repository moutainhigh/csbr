<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.csbr.qingcloud</groupId>
    <artifactId>hystrix-dashboard</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>hystrix-dashboard</name>
    <description>接口监控</description>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
<!--        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>-->
        <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
        <!--docker镜像前缀-->
        <docker.image.prefix>springio</docker.image.prefix>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
        </dependency>
        <!-- turnbine依赖 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-turbine</artifactId>
        </dependency>
        <dependency>
            <groupId>com.csbr.qingcloud</groupId>
            <artifactId>csbr-cloud-common</artifactId>
            <version>1.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>hystrix-dashboard</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--使用jib快速构建摆脱dockerfile文件-->
            <!--			<plugin>-->
            <!--				<groupId>com.google.cloud.tools</groupId>-->
            <!--				<artifactId>jib-maven-plugin</artifactId>-->
            <!--				<version>0.9.0</version>-->
            <!--				<configuration>-->
            <!--					<to>-->
            <!--						<image>gcr.io/my-project/image-built-with-jib</image>-->
            <!--					</to>-->
            <!--				</configuration>-->
            <!--			</plugin>-->
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--                <version>1.2.2</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>default</id>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                            <goal>push</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <repository>${docker.image.prefix}/${project.artifactId}</repository>-->
<!--                    &lt;!&ndash;<buildArgs>&ndash;&gt;-->
<!--                    &lt;!&ndash;<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>&ndash;&gt;-->
<!--                    &lt;!&ndash;</buildArgs>&ndash;&gt;-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>